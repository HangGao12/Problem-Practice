    def isInterleave(self, s1, s2, s3):
        """
        :type s1: str
        :type s2: str
        :type s3: str
        :rtype: bool
        """
        if len(s3) != len(s1) + len(s2):
            return False
        dp = [[False] * (len(s2) + 1) for _ in range(len(s1) + 1)]
        dp[0][0] = True
        for x in range(1, len(s2) + 1):
            dp[0][x] = dp[0][x - 1] and (s2[x - 1] == s3[x - 1])
        for y in range(1, len(s1) + 1):
            dp[y][0] = dp[y - 1][0] and (s1[y - 1] == s3[y - 1])
        for x in range(1, len(s1)+1):
            for y in range(1,len(s2)+1):
                dp[x][y] = (dp[x-1][y] and s1[x-1] == s3[x+y-1]) or (dp[x][y-1] and s2[y-1] == s3[x+y-1])

        return dp[len(s1)][len(s2)]
