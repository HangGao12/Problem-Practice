 def uniquePathsWithObstacles(self, obstacleGrid):
        """
        :type obstacleGrid: List[List[int]]
        :rtype: int
        """
        len1 = len(obstacleGrid)
        len2 = len(obstacleGrid[0])
        dp = []
        for x in range(len1):
            dp.append([0] * len2)
        if obstacleGrid[0][0] == 1:
            return 0
        else:
            dp[0][0] = 1
        for x in range(len1):
            for y in range(len2):
                if (x == 0 and y == 0) or obstacleGrid[x][y] == 1:
                    continue
                elif x == 0:
                    dp[x][y] = dp[x][y - 1]
                elif y == 0:
                    dp[x][y] = dp[x - 1][y]
                else:
                    dp[x][y] = dp[x][y - 1] + dp[x - 1][y]

        return dp[len1 - 1][len2 - 1]
