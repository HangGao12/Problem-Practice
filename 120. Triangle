    def minimumTotal(self, triangle):
        """
        :type triangle: List[List[int]]
        :rtype: int
        """
        len1 = len(triangle)
        dp = []
        for x in range(1, len1 + 1):
            dp.append([0] * x)
        dp[0][0] = triangle[0][0]
        #dp[1][0] = dp[0][0] + triangle[1][0]
        #dp[1][1] = dp[0][0] + triangle[1][1]
        for x in range(1, len1):
            for y in range(x + 1):
                if y == 0:
                    dp[x][y] = dp[x - 1][y] + triangle[x][y]
                elif y == x:
                    dp[x][y] = dp[x-1][y-1] + triangle[x][y]
                else:
                    dp[x][y] = min(dp[x - 1][y], dp[x - 1][y - 1]) + triangle[x][y]
        return min(dp[-1])
